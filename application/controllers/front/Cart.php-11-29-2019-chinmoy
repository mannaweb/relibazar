<?php
defined('BASEPATH') OR exit('No direct script access allowed');
class Cart extends CI_Controller {

	public function __construct(){
		parent::__construct();
		$this->load->model('front/cart_model');
		$this->load->model('front/products_model');
		$this->load->model('front/users_model');
		$this->cartSessionID = get_cookie('session_id');
	}

	public function index(){
		$data = array('viewPage'=>'cart/index','pageTitle'=>'Singla Sweet | Cart','activeMenus'=>array('checkout'));
		$this->load->view('front/template/default',$data);
	}


	public function addToCart(){
	  $pageData = array();
	  $data = $this->input->post();
	  $data['productData'] = $this->products_model->getDataByID($data['product_id']);
	  if(isset($data['productData']->product_type) && $data['productData']->product_type ==1){
	  	$checkCart = $this->cart_model->getCartData($this->cartSessionID,$data['product_id'],$data['productData']->product_type);
	  }else{
	  	$checkCart = $this->cart_model->getCartData($this->cartSessionID,$data['product_id'],$data['productData']->product_type,$data['key']);
	  }	  
	  if($checkCart){
	  	$updateCart = $this->cart_model->updateCartData($data,$checkCart->id);
	  	if($updateCart){	  	  
	  	  $pageData['cartVal'] = $this->cart_model->getCartDataByID($updateCart);
	  	  $pageData['type']	= 'html';
	  	  $returnArr['type'] ='html';
	  	  $returnArr['countCart'] = $this->cart_model->countCart($this->cartSessionID);
	  	  $subtotal = $this->cart_model->countCartPrice($this->cartSessionID);
	  	  $returnArr['subtotal'] = $subtotal->total;
	  	  $returnArr['cart_id'] = $updateCart;
	  	  $returnArr['html'] = $this->load->view('front/cart/li_list',$pageData,true);
	  	}
	  }else{	  	
	  	$data['session_id'] = $this->cartSessionID;
	  	$storeCart = $this->cart_model->storeCartData($data);
	  	if($storeCart){
	  	  $pageData['cartVal'] = $this->cart_model->getCartDataByID($storeCart);
	  	  $pageData['type']	= 'appened';	  
	  	  $returnArr['type'] ='appened';
	  	  $returnArr['countCart'] = $this->cart_model->countCart($this->cartSessionID);
	  	  $subtotal = $this->cart_model->countCartPrice($this->cartSessionID);
	  	  $returnArr['subtotal'] = $subtotal->total;
	  	  $returnArr['html'] = $this->load->view('front/cart/li_list',$pageData,true);
	  	}
	  }
	  echo json_encode($returnArr);	  
	}

	public function cartQuantityManage(){
		$data = $this->input->post();
		$data['productData'] = $this->products_model->getDataByID($data['product_id']);
		$updateCart = $this->cart_model->updateCartData($data,$data['cart_id']);
		if($updateCart){	  	  
	  	  $pageData['cartVal'] = $this->cart_model->getCartDataByID($updateCart);
	  	  $pageData['type']	= 'html';
	  	  $returnArr['type'] ='html';
	  	  $returnArr['countCart'] = $this->cart_model->countCart($this->cartSessionID);
	  	  $returnArr['cart_id'] = $updateCart;
	  	  $subtotal = $this->cart_model->countCartPrice($this->cartSessionID);
	  	  $returnArr['subtotal'] = $subtotal->total;
	  	  $returnArr['html'] = $this->load->view('front/cart/li_list',$pageData,true);
	  	}
	  	echo json_encode($returnArr);
	}	

	public function cartItemDelete(){
		$cart_id = $this->input->post('cart_id');
		$delete = $this->cart_model->deleteCartData($cart_id);
		if($delete){
			$returnArr['cart_id'] = $cart_id; 
			$returnArr['success'] = 'true'; 
			$returnArr['countCart'] = $this->cart_model->countCart($this->cartSessionID);
			$subtotal = $this->cart_model->countCartPrice($this->cartSessionID);
	  	    $returnArr['subtotal'] = $subtotal->total;
		}else{
			$returnArr['cart_id'] = ''; 
			$returnArr['success'] = 'false';
			$returnArr['countCart'] = $this->cart_model->countCart($this->cartSessionID);
			$subtotal = $this->cart_model->countCartPrice($this->cartSessionID);
	  	    $returnArr['subtotal'] = $subtotal->total;
		}
		echo json_encode($returnArr);
	}

	public function checkout(){
		$countCart = $this->cart_model->countCart($this->cartSessionID);
		if($this->session->userdata('id') && ($countCart>0)){
			$data = array('viewPage'=>'checkout/index','pageTitle'=>'Singla Sweet | Checkout','activeMenus'=>array('checkout'));
			$user_id = $this->session->userdata('id');
			$data['user_info'] = $this->users_model->getUserData($user_id);
			if($data['user_info'] && $data['user_info']->name){
				$explode = explode(' ', $data['user_info']->name);
				$data['first_name'] = (isset($explode[0])?$explode[0]:'');
				$last_name = trim(str_replace($data['first_name'], '', $data['user_info']->name));
				$data['last_name'] = $last_name;
			}
		    $this->load->view('front/template/default',$data);
		}else{
			redirect(base_url());
	    }
	}

	public function applyCoupon(){
		$coupon = $this->input->post('coupon_code');
		$checkCouponData = $this->cart_model->getCoupon($coupon);
		if($checkCouponData){
		   $subtotal = $this->cart_model->countCartPrice($this->cartSessionID);
		   if($checkCouponData->discount_type == 1){
		   	 $discountPrice = (($subtotal->total*$checkCouponData->discount)/100);
		   	 $returnArr['discountPrice'] = base64_encode(number_format((float)$discountPrice, 2, '.', ''));
		   	 $returnArr['coupon'] = base64_encode($coupon);
		   	 $returnArr['discount'] = base64_encode($checkCouponData->discount);
		   	 $returnArr['discountType'] = base64_encode('percentage');
		   	 $returnArr['subtotal'] = base64_encode(number_format((float)$subtotal->total-$discountPrice, 2, '.', ''));
		   }else{
		   	 $discountPrice = $checkCouponData->discount;
		   	 $returnArr['discountPrice'] =base64_encode(number_format((float)$discountPrice, 2, '.', '')) ;
		   	 $returnArr['coupon'] = base64_encode($coupon);
		   	 $returnArr['discount'] = base64_encode($checkCouponData->discount);
		   	 $returnArr['discountType'] = base64_encode('fixed');
		   	 $returnArr['subtotal'] = base64_encode(number_format((float)$subtotal->total-$discountPrice, 2, '.', ''));
		   }
		   $returnArr['status'] = 1; 
		}else{
		   $returnArr['status'] = 2;
		   $returnArr['msg'] = 'Invalid coupon code';
		}
		echo json_encode($returnArr);
		
	}

	public function placeOrder(){
		if($this->session->userdata('id')){
			$data = $this->input->post();
			$orderData = array();
			$getProductData = getAllCartData($this->cartSessionID);
			$subtotal = $this->cart_model->countCartPrice($this->cartSessionID);
			$orderData['store_id'] = $data['store_id'];
			$orderData['user_id'] = $this->session->userdata('id');
			$userInfo = array('user_id' => $this->session->userdata('id'),'first_name' =>$data['user_first_name'],'last_name' => $data['user_last_name'],'email' => $data['user_email'],'contact_number' => $data['user_contact_number'],'delivery_address' => $data['user_address'],'city' => $data['user_city'],'state' => $data['user_state'],'pincode' => $data['user_pincode']);
			$orderData['user_info'] = json_encode($userInfo);
			$orderData['product_info'] = json_encode($getProductData);
			$orderData['coupon'] = $data['coupon_code'];
			$orderData['coupon_price'] = (($data['coupon_price'] !=0)?base64_decode($data['coupon_price']):$data['coupon_price']);
			$orderData['coupon_discount'] = (($data['coupon_discount'] !=0)?base64_decode($data['coupon_discount']):$data['coupon_discount']);
			$orderData['coupon_discount_type'] = (($data['coupon_discount_type'] !=0)?base64_decode($data['coupon_discount_type']):$data['coupon_discount_type']);
			$orderData['payment_method'] = 'Cash On Delivery';
	        $orderData['payment_status'] = 'Pending';
	        $orderData['order_status'] = 1;
	        $orderData['total_amount'] = ($subtotal->total-$orderData['coupon_price']);
	        $orderData['created_by'] = $this->session->userdata('id');
	        $orderData['created_at'] = date('Y-m-d h:i:s');
			$storeData = $this->cart_model->storeOrder($orderData);
			if($storeData){
			  $getInsertID=str_pad($storeData, 6, '0', STR_PAD_LEFT);
			  $order_id ="OD".$getInsertID;
			  $updateData = $this->cart_model->updateOrder(array('order_id'=>$order_id),$storeData);
			}
		   if($updateData){
		   	 $deleteCart = $this->cart_model->deleteCartDataAfterPlaceOrder($this->cartSessionID);
		   	 $returnArr['status'] = 1; 
		   	 $returnArr['msg'] = 'Your order place successfully';
		   }else{
		   	 $returnArr['status'] = 2;
		     $returnArr['msg'] = 'Order can not be placed, Some problem occured please try again';
		   }
		   echo json_encode($returnArr);
		}else{
			redirect(base_url());
	    }

	}

	public function orderSuccess(){
		echo 'Thank you for place order .....';
	}

}
?>